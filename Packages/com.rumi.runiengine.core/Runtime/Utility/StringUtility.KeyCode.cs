#nullable enable
using UnityEngine;

namespace RuniEngine
{
    public static partial class StringUtility
    {
        /// <summary>
        /// (keyCode = KeyCode.RightArrow) = "→"
        /// </summary>
        public static string KeyCodeToString(this KeyCode keyCode, bool simply = false)
        {
            string text = keyCode switch
            {
                KeyCode.Escape => "ESC",
                KeyCode.Return when !simply => "Enter",
                KeyCode.Return when simply => "↵",
                KeyCode.Alpha0 => "0",
                KeyCode.Alpha1 => "1",
                KeyCode.Alpha2 => "2",
                KeyCode.Alpha3 => "3",
                KeyCode.Alpha4 => "4",
                KeyCode.Alpha5 => "5",
                KeyCode.Alpha6 => "6",
                KeyCode.Alpha7 => "7",
                KeyCode.Alpha8 => "8",
                KeyCode.Alpha9 => "9",
                KeyCode.AltGr when simply => "AG",
                KeyCode.Ampersand => "&",
                KeyCode.Asterisk => "*",
                KeyCode.At => "@",
                KeyCode.BackQuote => "`",
                KeyCode.Backslash => "\\",
                KeyCode.Caret => "^",
                KeyCode.Colon => ":",
                KeyCode.Comma => ",",
                KeyCode.Dollar => "$",
                KeyCode.DoubleQuote => "\"",
                KeyCode.Equals => "=",
                KeyCode.Exclaim => "!",
                KeyCode.Greater => ">",
                KeyCode.Hash => "#",
                KeyCode.Keypad0 when !simply => "Keypad 0",
                KeyCode.Keypad1 when !simply => "Keypad 1",
                KeyCode.Keypad2 when !simply => "Keypad 2",
                KeyCode.Keypad3 when !simply => "Keypad 3",
                KeyCode.Keypad4 when !simply => "Keypad 4",
                KeyCode.Keypad5 when !simply => "Keypad 5",
                KeyCode.Keypad6 when !simply => "Keypad 6",
                KeyCode.Keypad7 when !simply => "Keypad 7",
                KeyCode.Keypad8 when !simply => "Keypad 8",
                KeyCode.Keypad9 when !simply => "Keypad 9",
                KeyCode.KeypadDivide when !simply => "Keypad /",
                KeyCode.KeypadEnter when !simply => "Keypad ↵",
                KeyCode.KeypadEquals when !simply => "Keypad =",
                KeyCode.KeypadMinus when !simply => "Keypad -",
                KeyCode.KeypadMultiply when !simply => "Keypad *",
                KeyCode.KeypadPeriod when !simply => "Keypad .",
                KeyCode.KeypadPlus when !simply => "Keypad +",
                KeyCode.Keypad0 when simply => "K0",
                KeyCode.Keypad1 when simply => "K1",
                KeyCode.Keypad2 when simply => "K2",
                KeyCode.Keypad3 when simply => "K3",
                KeyCode.Keypad4 when simply => "K4",
                KeyCode.Keypad5 when simply => "K5",
                KeyCode.Keypad6 when simply => "K6",
                KeyCode.Keypad7 when simply => "K7",
                KeyCode.Keypad8 when simply => "K8",
                KeyCode.Keypad9 when simply => "K9",
                KeyCode.KeypadDivide when simply => "K/",
                KeyCode.KeypadEnter when simply => "K↵",
                KeyCode.KeypadEquals when simply => "K=",
                KeyCode.KeypadMinus when simply => "K-",
                KeyCode.KeypadMultiply when simply => "K*",
                KeyCode.KeypadPeriod when simply => "K.",
                KeyCode.KeypadPlus when simply => "K+",
                KeyCode.LeftApple => "Left Command",
                KeyCode.LeftBracket => "[",
                KeyCode.LeftCurlyBracket => "{",
                KeyCode.LeftParen => "(",
                KeyCode.LeftWindows when simply => "LW",
                KeyCode.Less => "<",
                KeyCode.Minus => "-",
                KeyCode.Mouse0 when !simply => "Left Mouse",
                KeyCode.Mouse1 when !simply => "Right Mouse",
                KeyCode.Mouse2 when !simply => "Middle Mouse",
                KeyCode.Mouse0 when simply => "LM",
                KeyCode.Mouse1 when simply => "RM",
                KeyCode.Mouse2 when simply => "MM",
                KeyCode.Mouse3 when simply => "M3",
                KeyCode.Mouse4 when simply => "M4",
                KeyCode.Mouse5 when simply => "M5",
                KeyCode.Mouse6 when simply => "M6",
                KeyCode.Percent => "%",
                KeyCode.Period => ".",
                KeyCode.Pipe => "|",
                KeyCode.Plus => "+",
                KeyCode.Print when !simply => "Print Screen",
                KeyCode.Print when simply => "PS",
                KeyCode.Question => "?",
                KeyCode.Quote => "'",
                KeyCode.RightApple => "Right Command",
                KeyCode.RightBracket => "]",
                KeyCode.RightCurlyBracket => "}",
                KeyCode.RightParen => ")",
                KeyCode.RightWindows when simply => "LW",
                KeyCode.Semicolon => ";",
                KeyCode.Slash => "/",
                KeyCode.Space when simply => "␣",
                KeyCode.SysReq when !simply => "Print Screen",
                KeyCode.SysReq when simply => "PS",
                KeyCode.Tilde => "~",
                KeyCode.Underscore => "_",
                KeyCode.UpArrow => "↑",
                KeyCode.DownArrow => "↓",
                KeyCode.LeftArrow => "←",
                KeyCode.RightArrow => "→",
                KeyCode.LeftControl when !simply => "Left Ctrl",
                KeyCode.RightControl when !simply => "Right Ctrl",
                KeyCode.LeftControl when simply => "LC",
                KeyCode.RightControl when simply => "RC",
                KeyCode.LeftAlt when simply => "LA",
                KeyCode.RightAlt when simply => "RA",
                KeyCode.LeftShift when simply => "L⇧",
                KeyCode.RightShift when simply => "R⇧",
                KeyCode.Backspace when simply => "B←",
                KeyCode.Delete when simply => "D←",
                KeyCode.PageUp when simply => "P↑",
                KeyCode.PageDown when simply => "P↓",
                _ => keyCode.ToString().AddSpacesToSentence(),
            };
            return text;
        }
    }
}
